@*@model IEnumerable<StoreFront.UI.MVC.Models.CartItemViewModel>*@
@model Dictionary<int, StoreFront.UI.MVC.Models.CartItemViewModel>

@{
    ViewBag.Title = "Shopping Cart";
    decimal? cartTotal = 0;
    int totalCountOfItems = 0;
}
<br />
<br />
<br />
<br />
<br />
<p class="text-center">
    @Html.ActionLink("Back to Shopping", "Index", "Products", null, new { @class = "btn btn-info" })
</p>

<h2>@ViewBag.Title</h2>

@if (Model.Count == 0)
{
    <p class="alert alert-warning">
        @ViewBag.Message
    </p>
}
else
{
    <table class="table data-table table-striped">
        <tr>
            <th>
                Product Image
            </th>
            <th>
                Quantity
            </th>
            <th>
                Product Name
            </th>
            <th>
                Price
            </th>
            <th>
                Total
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img src="~/Content/images/productImages/t_@item.Value.ProductName.ImagePath" title="@item.Value.ProductName.ProductName" />
                </td>
                <td>
                    @using (Html.BeginForm("UpdateCart", "ShoppingCart", FormMethod.Post))
                    {
                        @Html.Hidden("productID", item.Value.ProductName.ProductID)
                        @Html.TextBox("qty", item.Value.Qty, new { @class = "form-control", @style = "max-width:50px; display: inline;" })
                        <input type="submit" value="update Quantity" class="btn btn-info" />
                    }
                    @{
                        totalCountOfItems += item.Value.Qty;
                    }
                </td>
                <td>
                    @item.Value.ProductName.ProductName
                </td>
                <td>
                    @string.Format($"{item.Value.ProductName.Price:c}")
                </td>
                <td>
                    @{
                        decimal? lineTotal = item.Value.ProductName.Price * item.Value.Qty;
                        cartTotal += lineTotal;
                    }
                    @string.Format($"{lineTotal:c}")
                </td>
                <td>
                    @Html.ActionLink("Remove from Cart", "RemoveFromCart", new { id = item.Value.ProductName.ProductID })
                </td>
            </tr>
        }
    </table>
}

<p class="alert alert-success text-center" style="font-size: 1.25em;">
    You have @totalCountOfItems item@(totalCountOfItems > 1 ? "s" : "") in your cart.
    Your total before taxes and shipping is @string.Format($"{cartTotal:c}").
</p>